{"version":3,"sources":["component/vdeomngr.js","App.js","serviceWorker.js","index.js"],"names":["detail","tittle","videolink","addedon","checked","Videocomp","props","useState","check","setcheck","tools","settools","Box","width","direction","justify","align","margin","top","gap","CheckBox","onChange","event","target","height","background","Text","color","weight","size","onMouseOver","onMouseOut","min","round","elevation","fill","Play","Pause","FastForward","Rewind","pad","right","Checkmark","Vdeomngr","val","setval","tick","settick","search","setsearch","searchResults","setSearchResults","useEffect","results","filter","inform","includes","console","log","length","TextInput","plain","placeholder","value","Search","Select","options","option","map","index","App","overflow","horizontal","vertical","left","bottom","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Grommet","full","theme","tabs","header","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0dbfdf2d.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Box,CheckBox,Text,TextInput,Select} from 'grommet';\r\nimport '../App.css';\r\nimport {Search,Checkmark,Play,Pause,FastForward,Rewind} from 'grommet-icons';\r\nconst detail=[{\r\n    tittle: \"video 1\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"video 2\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n\r\n},{\r\n    tittle: \"video 3\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n}];\r\nconst Videocomp=(props)=>{\r\n    const [check,setcheck]=useState(props.checked);\r\n    const [tools,settools] = useState(false);\r\n    return(\r\n        <Box width=\"xxlarge\" direction=\"row\" justify=\"between\" align=\"center\" margin={{top:\"30px\"}} >\r\n            <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"small\">\r\n                        <CheckBox checked={check} onChange={(event) => setcheck(event.target.checked)}  />\r\n                        <Box width=\"30vh\" height=\"24vh\" align=\"center\" background=\"dark-1\" justify=\"center\" >Video</Box>\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >{props.tittle}</Text>\r\n\r\n                    </Box>\r\n                    <Box onMouseOver={()=>{settools(true);}}  height=\"40%\" onMouseOut={()=>{settools(false);}} width={{min:\"35vh\"}} direction=\"row\" justify=\"center\" align=\"center\">\r\n                        {tools && <Box round=\"small\" elevation=\"medium\" fill gap=\"small\"  direction=\"row\" justify=\"center\" background=\"dark-2\" align=\"center\">\r\n                            <Play />\r\n                            <Pause />\r\n                            <FastForward/>\r\n                            <Rewind/>\r\n                            </Box>}\r\n\r\n                    </Box>\r\n                    <Box width=\"45%\" gap=\"small\" direction=\"row\" justify=\"center\" align=\"center\" pad={{right:\"large\"}}>\r\n                    <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                        <Checkmark />\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Text color=\"black\" weight=\"bold\" size=\"small\" >{props.addedon}</Text>\r\n\r\n                        </Box>\r\n                        \r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Checkmark />\r\n                        </Box>\r\n                        \r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Checkmark />\r\n                        </Box>\r\n                        \r\n\r\n                    </Box>\r\n\r\n            </Box>\r\n\r\n    )\r\n}\r\nfunction Vdeomngr(props) {\r\n    const [val,setval]=useState(\"all\");\r\n    const[tick,settick]=useState(false);\r\n    const[search,setsearch] =useState(\"\");\r\n    const [searchResults, setSearchResults] = useState(detail);\r\n    useEffect(() => {\r\n        const results = detail.filter((inform)=>inform.tittle.includes(search));\r\n        console.log(results);\r\n        setSearchResults(results);\r\n      }, [search]);\r\n    \r\n    return (\r\n        <>\r\n        <Box fill direction=\"column\" background=\"white\" elevation=\"medium\" gap=\"medium\" height=\"auto\" round=\"small\" pad=\"small\">\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"between\">\r\n                <Box direction=\"row\" gap=\"small\" >\r\n                    <Text color=\"black\" size=\"medium\">Videos</Text>\r\n                    <Box background=\"neutral-4\" width=\"30px\" direction=\"row\" justify=\"center\" round=\"full\">{detail.length}</Box>\r\n                </Box>\r\n                <Box background=\"neutral-4\" width=\"30px\" direction=\"row\" justify=\"center\" round=\"full\">?</Box>\r\n            </Box>\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"end\" gap=\"small\">\r\n                <Box width=\"small\" direction=\"row\" justify=\"center\" align=\"center\" elevation=\"medium\">\r\n                    <TextInput plain placeholder=\"Search by name\" value={search} onChange={(event)=> {setsearch(event.target.value);}}></TextInput>\r\n                    <Search  />\r\n\r\n                </Box>\r\n                <Box width=\"auto\"  direction=\"row\" justify=\"center\" align=\"center\" elevation=\"medium\">\r\n                    <Text weight=\"bold\">Filetr by Category:</Text>\r\n                    <Select plain\r\n                        options={['small', 'medium', 'large']}\r\n                        value={val}\r\n                        onChange={({ option }) => setval(option)}\r\n                    />\r\n\r\n                </Box>\r\n                \r\n            </Box>\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"between\" >\r\n                    <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"small\">\r\n                        <CheckBox checked={tick} onChange={(event) => settick(event.target.checked)}   />\r\n                        <Text color=\"black\" size=\"small\"  weight=\"bold\" >Videos</Text>\r\n\r\n                    </Box>\r\n                    <Box width=\"45%\" gap=\"small\" direction=\"row\" justify=\"center\" align=\"center\" >\r\n                    <Box width=\"15%\">\r\n                    <Text color=\"black\" weight=\"bold\" size=\"small\" >Type</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Added on</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Table of content</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Phrase Cloud</Text>\r\n\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n            </Box>\r\n            {searchResults.map((value,index)=>{\r\n                return(\r\n                    <Videocomp tittle={value.tittle} addedon={value.addedon} checked={tick} ></Videocomp> \r\n                )\r\n            })}\r\n\r\n        </Box> \r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Vdeomngr;","import React,{useState} from 'react';\nimport {Box,Tab,Tabs,Text,Button} from 'grommet';\nimport './App.css';\nimport Vdeomngr from './component/vdeomngr';\nfunction App() {\n  const[chk,setchk]=useState(true);\n  \n  return (\n    <>\n      \n      <Box fill align=\"center\" width={{min:\"990px\"}} overflow={{horizontal:\"auto\",vertical:\"auto\"}} direction=\"column\" pad=\"small\" gap=\"small\" >\n        <Box align=\"center\" height={{min:\"auto\"}} width=\"xxlarge\" round=\"small\" direction=\"row\" pad={{left:\"xlarge\",top:\"small\",bottom:\"small\"}} background=\"white\" elevation=\"medium\" gap=\"large\" >\n          <Button ><Text size=\"16px\" weight=\"bold\" color=\"black\">Video Manager</Text></Button>\n          <Button ><Text size=\"16px\" weight=\"bold\" color=\"black\">Upload a Video</Text></Button>\n          \n        </Box>  \n        <Box width=\"xxlarge\" height={{min:\"auto\"}} >\n          <Vdeomngr />\n\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Grommet} from 'grommet';\nconst theme={\n  tabs:{\n    header:{\n      background: \"light-4\",\n    },\n  },\n};\nReactDOM.render(\n  <React.StrictMode>\n     <Grommet full theme={theme}>\n      \n      <App />\n    </Grommet>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}