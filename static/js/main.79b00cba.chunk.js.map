{"version":3,"sources":["component/paging.js","component/vdeomngr.js","App.js","serviceWorker.js","index.js"],"names":["Paging","videoperpage","totalvideos","paginate","pagenum","i","Math","ceil","push","Box","width","direction","justify","align","background","elevation","map","num","border","focusIndicator","onClick","pad","left","right","detail","tittle","videolink","addedon","checked","Videocomp","props","useState","check","setcheck","console","log","tools","settools","margin","top","gap","CheckBox","onChange","event","target","height","Text","color","weight","size","onMouseEnter","onMouseLeave","min","animation","type","duration","round","fill","Play","Pause","FastForward","Rewind","Checkmark","Vdeomngr","val","setval","tick","settick","search","setsearch","searchResults","setSearchResults","useEffect","results","filter","inform","includes","contentperpage","setcontentperpage","currentpage","setcurrentpage","setvideoperpage","lastindexofvideo","firstindexofvideo","length","TextInput","plain","placeholder","value","Search","Select","options","option","slice","index","App","overflow","horizontal","vertical","bottom","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Grommet","full","theme","tabs","header","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79b00cba.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport {Box} from 'grommet';\r\nimport '../App.css';\r\n\r\nfunction Paging({videoperpage,totalvideos,paginate}) {\r\n    const pagenum =[];\r\n    for(let i=1;i<=Math.ceil(totalvideos/videoperpage); i++){\r\n        pagenum.push(i);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"center\" align=\"center\">\r\n                <Box direction=\"row\"  background=\"white\" elevation=\"medium\" >\r\n                    {pagenum.map(num=>{\r\n                        return(\r\n                            <Box border focusIndicator=\"white\" onClick={()=> paginate(num)} pad={{left:\"small\",right:\"small\"}} justify=\"center\" align=\"center\">{num}</Box>\r\n                        )\r\n                    })}\r\n                </Box>\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Paging;","import React,{useState,useEffect} from 'react';\r\nimport {Box,CheckBox,Text,TextInput,Select} from 'grommet';\r\nimport '../App.css';\r\nimport {Search,Checkmark,Play,Pause,FastForward,Rewind} from 'grommet-icons';\r\nimport Paging from './paging';\r\nconst detail=[{\r\n    tittle: \"video 1\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"video 2\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n\r\n},{\r\n    tittle: \"video 3\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"video 4\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"video 5\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"game 6\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"game 7\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"game 8\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"game 9\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"game 10\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"movie 11\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"movie 12\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"movie 13\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"movie 14\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"movie 15\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"song 16\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"song 17\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"song 18\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"song 19\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n},{\r\n    tittle: \"song 20\",\r\n    videolink:\"\",\r\n    addedon:\"20 Sep 2020\",\r\n    checked: false\r\n}];\r\nconst Videocomp=(props)=>{\r\n    const [check,setcheck]=useState(props.checked);\r\n    console.log(check);\r\n    const [tools,settools] = useState(false);\r\n    return(\r\n        <Box width=\"xxlarge\" direction=\"row\" justify=\"between\" align=\"center\" margin={{top:\"30px\"}} >\r\n            <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"small\">\r\n                        <CheckBox checked={props.checked} onChange={(event) => setcheck(event.target.checked)}  />\r\n                        <Box width=\"30vh\" height=\"24vh\" align=\"center\" background=\"dark-1\" justify=\"center\" >Video</Box>\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >{props.tittle}</Text>\r\n\r\n                    </Box>\r\n                    <Box onMouseEnter={()=>{settools(true);}}  height=\"40%\" onMouseLeave={()=>{settools(false);}} width={{min:\"35vh\"}} direction=\"row\" justify=\"center\" align=\"center\">\r\n                        {tools && <Box animation={{type:\"slideLeft\",duration:\"3000\"}} round=\"small\" elevation=\"medium\" fill gap=\"small\"  direction=\"row\" justify=\"center\" background=\"dark-2\" align=\"center\">\r\n                            <Play />\r\n                            <Pause />\r\n                            <FastForward/>\r\n                            <Rewind/>\r\n                            </Box>}\r\n\r\n                    </Box>\r\n                    <Box width=\"45%\" gap=\"small\" direction=\"row\" justify=\"center\" align=\"center\" pad={{right:\"large\"}}>\r\n                    <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                        <Checkmark />\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Text color=\"black\" weight=\"bold\" size=\"small\" >{props.addedon}</Text>\r\n\r\n                        </Box>\r\n                        \r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Checkmark />\r\n                        </Box>\r\n                        \r\n                        <Box width=\"15%\" justify=\"center\" align=\"center\">\r\n                            <Checkmark />\r\n                        </Box>\r\n                        \r\n\r\n                    </Box>\r\n\r\n            </Box>\r\n\r\n    )\r\n}\r\nfunction Vdeomngr(props) {\r\n    const [val,setval]=useState(\"all\");\r\n    const[tick,settick]=useState(false);\r\n    const[search,setsearch] =useState(\"\");\r\n    const [searchResults, setSearchResults] = useState(detail);\r\n    useEffect(() => {\r\n        const results = detail.filter((inform)=>inform.tittle.includes(search));\r\n        console.log(results);\r\n        setSearchResults(results);\r\n      }, [search]);\r\n    const [contentperpage,setcontentperpage]= useState(5);\r\n    const [currentpage,setcurrentpage]= useState(1);\r\n    const[videoperpage,setvideoperpage]=useState(5);\r\n    \r\n    \r\n    const lastindexofvideo= currentpage*videoperpage;\r\n    const firstindexofvideo = lastindexofvideo - videoperpage;\r\n    const paginate=(num)=> setcurrentpage(num);\r\n    \r\n    return (\r\n        <>\r\n        <Box fill direction=\"column\" background=\"white\" elevation=\"medium\" gap=\"medium\" height=\"auto\" round=\"small\" pad=\"small\">\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"between\">\r\n                <Box direction=\"row\" gap=\"small\" >\r\n                    <Text color=\"black\" size=\"medium\">Videos</Text>\r\n                    <Box background=\"neutral-4\" width=\"30px\" direction=\"row\" justify=\"center\" round=\"full\">{detail.length}</Box>\r\n                </Box>\r\n                <Box background=\"neutral-4\" width=\"30px\" direction=\"row\" justify=\"center\" round=\"full\">?</Box>\r\n            </Box>\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"end\" gap=\"small\">\r\n                <Box width=\"small\" direction=\"row\" justify=\"center\" align=\"center\" elevation=\"medium\">\r\n                    <TextInput plain placeholder=\"Search by name\" value={search} onChange={(event)=> {setsearch(event.target.value);}}></TextInput>\r\n                    <Search  />\r\n\r\n                </Box>\r\n                <Box width=\"auto\"  direction=\"row\" justify=\"center\" align=\"center\" elevation=\"medium\">\r\n                    \r\n                    <Select plain placeholder={<Text weight=\"bold\">Filetr by Category:</Text>}\r\n                        options={['small', 'medium', 'large']}\r\n                        value={val}\r\n                        onChange={({ option }) => setval(option)}\r\n                    />\r\n\r\n                </Box>\r\n                \r\n            </Box>\r\n            <Box width=\"xxlarge\" direction=\"row\" justify=\"between\" >\r\n                    <Box direction=\"row\" justify=\"center\" align=\"center\" gap=\"small\">\r\n                        <CheckBox checked={tick} onChange={(event) => settick(event.target.checked)}   />\r\n                        <Text color=\"black\" size=\"small\"  weight=\"bold\" >Videos</Text>\r\n\r\n                    </Box>\r\n                    <Box width=\"45%\" gap=\"small\" direction=\"row\" justify=\"center\" align=\"center\" >\r\n                    <Box width=\"15%\">\r\n                    <Text color=\"black\" weight=\"bold\" size=\"small\" >Type</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Added on</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Table of content</Text>\r\n\r\n                        </Box>\r\n                        <Box width=\"15%\">\r\n                        <Text color=\"black\" weight=\"bold\" size=\"small\" >Phrase Cloud</Text>\r\n\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n            </Box>\r\n            {searchResults.slice(firstindexofvideo,lastindexofvideo).map((value,index)=>{\r\n                return(\r\n                    <Videocomp tittle={value.tittle} addedon={value.addedon} checked={tick} ></Videocomp> \r\n                )\r\n            })}\r\n            <Box width=\"xxlarge\" justify=\"center\" direction=\"row\" align=\"center\">\r\n                <Box width=\"100px\" >\r\n                    <Select  size=\"medium\"\r\n                    options={[5,10,20,30,40,50]}\r\n                    value={contentperpage}\r\n                    onChange={( {option} ) => {setcontentperpage(option); setvideoperpage(option);}}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Paging videoperpage={videoperpage} totalvideos={detail.length} paginate={paginate} ></Paging>\r\n\r\n        </Box> \r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Vdeomngr;","import React,{useState} from 'react';\nimport {Box,Tab,Tabs,Text,Button} from 'grommet';\nimport './App.css';\nimport Vdeomngr from './component/vdeomngr';\nfunction App() {\n  const[chk,setchk]=useState(true);\n  \n  return (\n    <>\n      \n      <Box fill align=\"center\" width={{min:\"990px\"}} overflow={{horizontal:\"auto\",vertical:\"auto\"}} direction=\"column\" pad=\"small\" gap=\"small\" >\n        <Box align=\"center\" height={{min:\"auto\"}} width=\"xxlarge\" round=\"small\" direction=\"row\" pad={{left:\"xlarge\",top:\"small\",bottom:\"small\"}} background=\"white\" elevation=\"medium\" gap=\"large\" >\n          <Button ><Text size=\"16px\" weight=\"bold\" color=\"black\">Video Manager</Text></Button>\n          <Button ><Text size=\"16px\" weight=\"bold\" color=\"black\">Upload a Video</Text></Button>\n          \n        </Box>  \n        <Box width=\"xxlarge\" height={{min:\"auto\"}} >\n          <Vdeomngr />\n\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Grommet} from 'grommet';\nconst theme={\n  tabs:{\n    header:{\n      background: \"light-4\",\n    },\n  },\n};\nReactDOM.render(\n  <React.StrictMode>\n     <Grommet full theme={theme}>\n      \n      <App />\n    </Grommet>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}